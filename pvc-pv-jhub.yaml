###### Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<PROJECT_FS>
  labels:
    usage: pv-<PROJECT_FS>
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  azureFile:
    secretName: azure-secret
    shareName: fs-<PROJECT_FS>
    readOnly: false
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<USER_FS>
  labels:
    usage: pv-<USER_FS>
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  azureFile:
    secretName: azure-secret
    shareName: fs-<USER_FS>
    readOnly: false
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<LAKEHOUSE_DEFAULT>
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
  storageClassName: blob-fuse
  mountOptions:
    - -o allow_other
    - --file-cache-timeout-in-seconds=120
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    # make sure this volumeid is unique in the cluster
    volumeHandle: 982e99a6-bfd9-4b96-b2c2-db013c5d2ea2
    volumeAttributes:
      containerName: <LAKEHOUSE_DEFAULT>
    nodeStageSecretRef:
      name: azure-secret
      namespace: <JHUB_NAMESPACE>
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<LAKEHOUSE_A>
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
  storageClassName: blob-fuse
  mountOptions:
    - -o allow_other
    - --file-cache-timeout-in-seconds=120
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    # make sure this volumeid is unique in the cluster
    volumeHandle: 4b96-b2c2-db982e99a6-bfd9-013c5d2ea2
    volumeAttributes:
      containerName: <LAKEHOUSE_A>
    nodeStageSecretRef:
      name: azure-secret-1
      namespace: <JHUB_NAMESPACE>
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<LAKEHOUSE_B>
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
  storageClassName: blob-fuse
  mountOptions:
    - -o allow_other
    - --file-cache-timeout-in-seconds=120
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    # make sure this volumeid is unique in the cluster
    volumeHandle: 2c2-db013c5d2ea2982e99a6-bfd9-4b96-b
    volumeAttributes:
      containerName: <LAKEHOUSE_B>
    nodeStageSecretRef:
      name: azure-secret-1
      namespace: <JHUB_NAMESPACE>
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<LAKEHOUSE_C>
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
  storageClassName: blob-fuse
  mountOptions:
    - -o allow_other
    - --file-cache-timeout-in-seconds=120
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    # make sure this volumeid is unique in the cluster
    volumeHandle: 9a6-bfd9-4b96-b982e92c2-db013c5d2ea2
    volumeAttributes:
      containerName: <LAKEHOUSE_C>
    nodeStageSecretRef:
      name: azure-secret-2
      namespace: <JHUB_NAMESPACE>
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-<LAKEHOUSE_D>
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
  storageClassName: blob-fuse
  mountOptions:
    - -o allow_other
    - --file-cache-timeout-in-seconds=120
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    # make sure this volumeid is unique in the cluster
    volumeHandle: c5d2ea2982e99a6-bfd9-4b96-b2c2-db013
    volumeAttributes:
      containerName: <LAKEHOUSE_D>
    nodeStageSecretRef:
      name: azure-secret-2
      namespace: <JHUB_NAMESPACE>
###### Persistent Volume Claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-<PROJECT_FS>
  # Set this annotation to NOT let Kubernetes automatically create
  # a persistent volume for this volume claim.
  annotations:
    volume.beta.kubernetes.io/storage-class: ""
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    # To make sure we match the claim with the exact volume, match the label
    matchLabels:
      usage: pv-<PROJECT_FS>
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-<USER_FS>
  # Set this annotation to NOT let Kubernetes automatically create
  # a persistent volume for this volume claim.
  annotations:
    volume.beta.kubernetes.io/storage-class: ""
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  selector:
    # To make sure we match the claim with the exact volume, match the label
    matchLabels:
      usage: pv-<USER_FS>
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-<LAKEHOUSE_DEFAULT>
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  volumeName: pv-<LAKEHOUSE_DEFAULT>
  storageClassName: blob-fuse 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-<LAKEHOUSE_A>
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  volumeName: pv-<LAKEHOUSE_A>
  storageClassName: blob-fuse 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-<LAKEHOUSE_B>
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  volumeName: pv-<LAKEHOUSE_B>
  storageClassName: blob-fuse 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-<LAKEHOUSE_C>
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  volumeName: pv-<LAKEHOUSE_C>
  storageClassName: blob-fuse 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-<LAKEHOUSE_D>
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  volumeName: pv-<LAKEHOUSE_D>
  storageClassName: blob-fuse 